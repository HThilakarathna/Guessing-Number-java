import java.util.Random;
import javax.swing.JOptionPane;

public class GuessTheNumber {

    public static void main(String[] args) {
        // Set the range for the random number
        int minRange = 1;
        int maxRange = 100;

        // Generate a random number
        int randomNumber = generateRandomNumber(minRange, maxRange);

        // Set the maximum number of attempts
        int maxAttempts = 10;

        // Initialize variables
        int userGuess;
        int attempts = 0;
        int score = 0;

        // Game loop
        while (attempts < maxAttempts) {
            // Prompt the user to enter their guess
            String input = JOptionPane.showInputDialog("Guess the number between " + minRange + " and " + maxRange);
            
            // Check if the user clicked cancel or entered an invalid input
            if (input == null) {
                System.exit(0);
            }

            try {
                // Parse the user's input as an integer
                userGuess = Integer.parseInt(input);

                // Check if the guess is correct
                if (userGuess == randomNumber) {
                    JOptionPane.showMessageDialog(null, "Congratulations! You guessed the number in " + (attempts + 1) + " attempts.");
                    
                    // Update score based on attempts
                    score += (maxAttempts - attempts) * 10;

                    // Ask the user if they want to play again
                    int playAgain = JOptionPane.showConfirmDialog(null, "Do you want to play again?", "Play Again", JOptionPane.YES_NO_OPTION);
                    if (playAgain == JOptionPane.YES_OPTION) {
                        // Generate a new random number for the next round
                        randomNumber = generateRandomNumber(minRange, maxRange);
                        // Reset attempts for the new round
                        attempts = 0;
                    } else {
                        break; // Exit the game if the user chooses not to play again
                    }
                } else {
                    // Provide feedback to the user
                    String message = (userGuess < randomNumber) ? "Too low! Try again." : "Too high! Try again.";
                    JOptionPane.showMessageDialog(null, message);
                    attempts++;
                }
            } catch (NumberFormatException e) {
                // Handle invalid input
                JOptionPane.showMessageDialog(null, "Invalid input. Please enter a valid number.");
            }
        }

        // Display the final score
        JOptionPane.showMessageDialog(null, "Your final score is: " + score);
    }

    // Method to generate a random number within a specified range
    private static int generateRandomNumber(int min, int max) {
        Random random = new Random();
        return random.nextInt((max - min) + 1) + min;
    }
}
